<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Verdana&#39;s Notebook</title>
    <link>http://phpvim.net/categories/php/</link>
    <description>Recent content in Php on Verdana&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;知识共享署名 4.0 国际许可协议&lt;/a&gt;进行许可。</copyright>
    <lastBuildDate>Sat, 31 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://phpvim.net/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PHP 7.1 的新特性</title>
      <link>http://phpvim.net/post/php/new-features-in-php7.1/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/php/new-features-in-php7.1/</guid>
      <description>&lt;p&gt;PHP 开发组在 2016.10.01 发布了 PHP 7.1.0，这是 7.x 系列的首个版本。7.1 带来了一些新的特性 —— 比如 void return type。&lt;/p&gt;

&lt;p&gt;下面选择性了介绍一些 PHP 7.1 中的特性 :)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于 PHP7 中的 refcount</title>
      <link>http://phpvim.net/post/php/php7-refcount/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/php/php7-refcount/</guid>
      <description>&lt;p&gt;最近在复习 PHP 的垃圾收集机制，发现一些 refcount 的小细节，这里稍作记录。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PHP 的 GC 是用来清理运行时资源的。它使用了基于引用的机制来处理复杂的变量类型，同时也使用了 mark-and-sweep 的技术来检测循环引用所引起的内存泄漏。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当然这篇小文并不是为了介绍 PHP 的 GC 机制，而是简单的说一下 refcount，原因是我在测试一些介绍 GC 的文章中的例子时，发现一些例子运行结果不正确。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>