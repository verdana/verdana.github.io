<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Verdana&#39;s Notebook</title>
    <link>http://phpvim.net/</link>
    <description>Recent content on Verdana&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;知识共享署名 4.0 国际许可协议&lt;/a&gt;进行许可。</copyright>
    <lastBuildDate>Wed, 14 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://phpvim.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>链接</title>
      <link>http://phpvim.net/links/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/links/</guid>
      <description>Ritchie and his friends.</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>http://phpvim.net/about/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/about/</guid>
      <description>Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>PHP 的 yield 关键字</title>
      <link>http://phpvim.net/post/php/php-yield/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/php/php-yield/</guid>
      <description>&lt;p&gt;PHP 5.5 中加入了生成器语法，但是我一直都很少使用，基本上和其它语言的实现类似，这里做一个简单的总结。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我常用的 Git 命令</title>
      <link>http://phpvim.net/post/git/my-most-used-git-cmds/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/git/my-most-used-git-cmds/</guid>
      <description>不是什么教学贴&amp;hellip;扯到哪是哪吧！ 除了偶尔参与一些多人项目，实际上我还是在单独使用 Git，一个好处就是可以随意折腾不用担心影响他人</description>
    </item>
    
    <item>
      <title>Modern PHP Without a Framework</title>
      <link>http://phpvim.net/post/php/modern-php-wof/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/php/modern-php-wof/</guid>
      <description>&lt;h2 id=&#34;无框架编程&#34;&gt;无框架编程&lt;/h2&gt;

&lt;p&gt;读了来自 &lt;a href=&#34;https://twitter.com/_KevinSmith&#34;&gt;Kevin Smith&lt;/a&gt; 的文章 &lt;a href=&#34;https://kevinsmith.io/modern-php-without-a-framework&#34;&gt;Modern PHP Without a Framework&lt;/a&gt;，感觉很棒，这也是一直以来我个人追求的目标 —— 无框架 PHP 编程。&lt;/p&gt;

&lt;p&gt;记得以前，想要脱离框架编写 Web 应用是比较麻烦的，很多东西需要自己来写，比如 &lt;code&gt;HTTP&lt;/code&gt; 消息处理，路由，会话管理，权限校验，数据库操作等等。有了框架以后，我们就可以不关心这些，而把精力集中在业务逻辑上。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTTP/2 初探</title>
      <link>http://phpvim.net/post/http/http-2.0-initial/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/http/http-2.0-initial/</guid>
      <description>&lt;h2 id=&#34;http-2-介绍&#34;&gt;HTTP/2 介绍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7540&#34;&gt;HTTP/2&lt;/a&gt; 是新一代的超文本传输协议，相比 1999 年发布的 HTTP/1.1 变化可谓巨大。当年，我们见到的网页还比较简单，通常只有少数几个静态页面配合一些图片和样式表资源。现在整个互联网都已经动态化，近20年没有更新的 HTTP/1.1 很多方面已经难以跟上时代的发展。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP 7.1 的新特性</title>
      <link>http://phpvim.net/post/php/new-features-in-php7.1/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/php/new-features-in-php7.1/</guid>
      <description>&lt;p&gt;PHP 开发组在 2016.10.01 发布了 PHP 7.1.0，这是 7.x 系列的首个版本。7.1 带来了一些新的特性 —— 比如 void return type。&lt;/p&gt;

&lt;p&gt;下面选择性了介绍一些 PHP 7.1 中的特性 :)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于 PHP7 中的 refcount</title>
      <link>http://phpvim.net/post/php/php7-refcount/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/php/php7-refcount/</guid>
      <description>&lt;p&gt;最近在复习 PHP 的垃圾收集机制，发现一些 refcount 的小细节，这里稍作记录。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PHP 的 GC 是用来清理运行时资源的。它使用了基于引用的机制来处理复杂的变量类型，同时也使用了 mark-and-sweep 的技术来检测循环引用所引起的内存泄漏。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当然这篇小文并不是为了介绍 PHP 的 GC 机制，而是简单的说一下 refcount，原因是我在测试一些介绍 GC 的文章中的例子时，发现一些例子运行结果不正确。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何使用 Golang 的 Interface</title>
      <link>http://phpvim.net/post/golang/howto-use-go-interfaces/</link>
      <pubDate>Thu, 29 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/golang/howto-use-go-interfaces/</guid>
      <description>我偶尔会在我的日常工作上免费进行咨询和代码审查。因此，我倾向于阅读很多其他人的代码。虽然这很可能是错觉，但我真的看到了很多我称之为 Java 风格的接</description>
    </item>
    
    <item>
      <title>C&#43;&#43; dynamic cast</title>
      <link>http://phpvim.net/post/c&#43;&#43;/dynamic-cast/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/c&#43;&#43;/dynamic-cast/</guid>
      <description>&lt;h2 id=&#34;rtti&#34;&gt;RTTI&lt;/h2&gt;

&lt;p&gt;RTTI 全称运行时类型信息（Run-time Type Identification）。&lt;/p&gt;

&lt;p&gt;RTTI 提供了一个标准的方法用来检测运行时对象的类型。&lt;/p&gt;

&lt;p&gt;换句话说，RTTI（运行时类型识别）允许“用指向基类的指针或引用来操纵对象”的程序能够获取到“这些指针或引用所指对象”的实际派生类型。&lt;/p&gt;

&lt;p&gt;RTTI 通过两种操作符来实现：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;typeid        返回指针或引用所指向的对象的实际派生类型&lt;/li&gt;
&lt;li&gt;dynamic_cast  将基类指针或引用安全地转换为派生类的指针或引用
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;dynamic-cast&#34;&gt;dynamic_cast&lt;/h2&gt;

&lt;p&gt;尝试将一个对象转换成类型更具体的对象。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PostgreSQL 常用命令</title>
      <link>http://phpvim.net/post/postgresql/common-commands/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/postgresql/common-commands/</guid>
      <description>&lt;p&gt;最近开始学习 PostgreSQL，准备慢慢告别 MySQL 了，这里整理收集了一些常用的控制台命令，方便查阅。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTTP 状态码</title>
      <link>http://phpvim.net/post/http/http-status-codes/</link>
      <pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/http/http-status-codes/</guid>
      <description>&lt;p&gt;当我们从客户端向服务器发起 HTTP 请求时，服务器会向我们返回响应信息，其中头信息中包含的 HTTP 状态码会告诉我们服务器的状态。&lt;/p&gt;

&lt;p&gt;下面的表格中列出了一些在 Web Development 中常见的 HTTP 状态码。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018年的一些规划</title>
      <link>http://phpvim.net/post/2018-plans/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://phpvim.net/post/2018-plans/</guid>
      <description>&lt;h3 id=&#34;期望一些改变&#34;&gt;期望一些改变&lt;/h3&gt;

&lt;p&gt;2017 过去了，一切都是一团糟！&lt;/p&gt;

&lt;p&gt;2018 到来了，依然还是老样子？&lt;/p&gt;

&lt;p&gt;作为一个老年程序员，能在这个行业待的时间不多了，但是我热爱这一行，希望在新的一年里，能力能更进一步，生活上也能有一些改变。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>